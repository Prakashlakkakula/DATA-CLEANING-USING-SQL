--Cleaning data using SQL  queries

SELECT *
FROM PortfolioProject1..[Nashville_Housing]

------------------------------------------------------------------------------------------------------------
--standardizing Date format

SELECT SaleDate, CONVERT(Date,SaleDate)
FROM PortfolioProject1..[Nashville_Housing ]

UPDATE Nashville_Housing 
SET SaleDate= CONVERT(date, SaleDate)

------------------------------------------------------------------------------------------------------------
--populate property address data

SELECT *
FROM PortfolioProject1..[Nashville_Housing ]
--WHERE PropertyAddress is NULL
ORDER by ParcelID



SELECT a.ParcelID,a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM PortfolioProject1..[Nashville_Housing ] a 
JOIN PortfolioProject1..[Nashville_Housing ] b 
     ON a.ParcelID=b.ParcelID
     AND a.UniqueID <>b.UniqueID 
WHERE a.PropertyAddress is NULL

UPDATE a 
SET PropertyAddress=ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM PortfolioProject1..[Nashville_Housing ] a 
JOIN PortfolioProject1..[Nashville_Housing ] b 
     ON a.ParcelID=b.ParcelID
     AND a.UniqueID <>b.UniqueID 
WHERE a.PropertyAddress is NULL


------------------------------------------------------------------------------------------------------------
--Breaking out address into individual columns(address,city,state)

SELECT PropertyAddress
FROM PortfolioProject1..[Nashville_Housing ]
--WHERE PropertyAddress is NULL
--ORDER by ParcelID

SELECT 
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1) as Address,
SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress)+1, LEN(PropertyAddress)) as City
FROM PortfolioProject1..[Nashville_Housing ]

ALTER TABLE Nashville_Housing
ADD Propertsplitaddress NVARCHAR

UPDATE Nashville_Housing 
SET Propertsplitaddress= SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1)


ALTER TABLE Nashville_Housing
ADD Propertsplitcity NVARCHAR(255)

UPDATE Nashville_Housing 
SET Propertsplitcity= SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress)+1, LEN(PropertyAddress))


ALTER TABLE Nashville_Housing
DROP COLUMN Propertsplitaddress

ALTER TABLE Nashville_Housing
DROP COLUMN Propertsplitcity


ALTER TABLE Nashville_Housing
ADD Propertsplitaddress NVARCHAR(255)

UPDATE Nashville_Housing 
SET Propertsplitaddress= SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1)


ALTER TABLE Nashville_Housing
ADD Propertsplitcity NVARCHAR(255)

UPDATE Nashville_Housing 
SET Propertsplitcity= SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress)+1, LEN(PropertyAddress))


SELECT Propertsplitaddress, Propertsplitcity
FROM PortfolioProject1..[Nashville_Housing ]
--WHERE PropertyAddress is NULL
--ORDER by ParcelID



------------------------------------------------------------------------------------------------------------
--OWNER ADDRESSS
SELECT [OwnerAddress]
FROM PortfolioProject1..[Nashville_Housing ]

SELECT
PARSENAME(REPLACE([OwnerAddress], ',','.'), 3),
PARSENAME(REPLACE([OwnerAddress], ',','.'), 2),
PARSENAME(REPLACE([OwnerAddress], ',','.'), 1)
FROM PortfolioProject1..[Nashville_Housing ]

ALTER TABLE Nashville_Housing
ADD OWNERsplitaddress NVARCHAR(255)

UPDATE Nashville_Housing 
SET OWNERsplitaddress= PARSENAME(REPLACE([OwnerAddress], ',','.'), 3)


ALTER TABLE Nashville_Housing
ADD OWNERsplitcity NVARCHAR(255)

UPDATE Nashville_Housing 
SET OWNERsplitcity= PARSENAME(REPLACE([OwnerAddress], ',','.'), 2)


ALTER TABLE Nashville_Housing
ADD OWNERsplitstate NVARCHAR(255)

UPDATE Nashville_Housing 
SET OWNERsplitstate= PARSENAME(REPLACE([OwnerAddress], ',','.'), 1)



SELECT OWNERsplitaddress,OWNERsplitcity,OWNERsplitstate
FROM PortfolioProject1..[Nashville_Housing ]



------------------------------------------------------------------------------------------------------------
--change y and n to yes and no in [SoldAsVacant] column

SELECT  DISTINCT[SoldAsVacant],COUNT([SoldAsVacant])
FROM PortfolioProject1..[Nashville_Housing ]
GROUP BY [SoldAsVacant]
ORDER BY 2


SELECT [SoldAsVacant]
,CASE WHEN [SoldAsVacant]='Y' THEN 'Yes'
     WHEN [SoldAsVacant]='N' THEN 'No'
     ELSE [SoldAsVacant]
     END 
FROM PortfolioProject1..[Nashville_Housing]


UPDATE Nashville_Housing
SET [SoldAsVacant]= CASE WHEN [SoldAsVacant]='Y' THEN 'Yes'
     WHEN [SoldAsVacant]='N' THEN 'No'
     ELSE [SoldAsVacant]
     END 


------------------------------------------------------------------------------------------------------------
--REMOVE DUPLICATES

WITH rowscte AS
(
SELECT *,
    ROW_NUMBER() OVER(
    PARTITION BY [ParcelID],
                 [PropertyAddress],
                 [SalePrice],
                 [LegalReference]
                 ORDER BY 
                    [UniqueID]) row_num
FROM PortfolioProject1..[Nashville_Housing]
)

DELETE
FROM rowscte
WHERE row_num>1


------------------------------------------------------------------------------------------------------------
--DELETE UNUSED COLUMNS

SELECT *
FROM PortfolioProject1..[Nashville_Housing]

ALTER TABLE Nashville_Housing
DROP COLUMN PropertAddress,[OwnerAddress],[TaxDistrict]